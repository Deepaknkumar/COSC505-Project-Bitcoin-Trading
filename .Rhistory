library(readr)
btceUSD_1_min_data_2012_01_01_to_2017_05_31 <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")
View(btceUSD_1_min_data_2012_01_01_to_2017_05_31)
## clusters in dataset
#library(readr)
#bt <- read_csv("bitstampUSD_1-min_data_2012-01-01_to_2017-10-20.csv")
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")
NSamples <- 100000
bts <- bt[sample(length(bt$Timestamp),NSamples),]
# opening times
xopen <- cbind(TimeStamp = bts$Timestamp, Open = replaceNanNearst(bts$Open))
cl_open <- kmeans(xopen,2) # find clusters
plot(xopen,col=cl_open$cluster) # plot the respective clusters
#closing times
xclose <- cbind(TimeStamp = bts$Timestamp, Close = replaceNanNearst(bts$Close))
cl_close <- kmeans(xclose,2) # find clusters
plot(xclose,col=cl_close$cluster) # plot the respective clusters
# Low
xlow <- cbind(TimeStamp = bts$Timestamp, Low = replaceNanNearst(bts$Low))
cl_low <- kmeans(xlow,2) # find clusters
plot(xlow,col=cl_low$cluster) # plot the respective clusters
# High
xhigh <- cbind(TimeStamp = bts$Timestamp, high = replaceNanNearst(bts$High))
cl_high <- kmeans(xhigh,2) # obtain clusters
plot(xhigh,col=cl_high$cluster) # plot the respective clusters
# All of them are same!
## clusters in dataset
#library(readr)
#bt <- read_csv("bitstampUSD_1-min_data_2012-01-01_to_2017-10-20.csv")
install.packages('tseries')
install.packages('forecast')
library(forecast)
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")
NSamples <- 100000
bts <- bt[sample(length(bt$Timestamp),NSamples),]
# opening times
xopen <- cbind(TimeStamp = bts$Timestamp, Open = replaceNanNearst(bts$Open))
cl_open <- kmeans(xopen,2) # find clusters
plot(xopen,col=cl_open$cluster) # plot the respective clusters
#closing times
xclose <- cbind(TimeStamp = bts$Timestamp, Close = replaceNanNearst(bts$Close))
cl_close <- kmeans(xclose,2) # find clusters
plot(xclose,col=cl_close$cluster) # plot the respective clusters
# Low
xlow <- cbind(TimeStamp = bts$Timestamp, Low = replaceNanNearst(bts$Low))
cl_low <- kmeans(xlow,2) # find clusters
plot(xlow,col=cl_low$cluster) # plot the respective clusters
# High
xhigh <- cbind(TimeStamp = bts$Timestamp, high = replaceNanNearst(bts$High))
cl_high <- kmeans(xhigh,2) # obtain clusters
plot(xhigh,col=cl_high$cluster) # plot the respective clusters
# All of them are same!
## clusters in dataset
#library(readr)
#bt <- read_csv("bitstampUSD_1-min_data_2012-01-01_to_2017-10-20.csv")
install.packages('tseries')
install.packages('forecast')
library(forecast)
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")
NSamples <- 100000
bts <- bt[sample(length(bt$Timestamp),NSamples),]
# opening times
xopen <- cbind(TimeStamp = bts$Timestamp, Open = replaceNanNearst(bts$Open))
cl_open <- kmeans(xopen,2) # find clusters
plot(xopen,col=cl_open$cluster) # plot the respective clusters
#closing times
xclose <- cbind(TimeStamp = bts$Timestamp, Close = replaceNanNearst(bts$Close))
cl_close <- kmeans(xclose,2) # find clusters
plot(xclose,col=cl_close$cluster) # plot the respective clusters
# Low
xlow <- cbind(TimeStamp = bts$Timestamp, Low = replaceNanNearst(bts$Low))
cl_low <- kmeans(xlow,2) # find clusters
plot(xlow,col=cl_low$cluster) # plot the respective clusters
# High
xhigh <- cbind(TimeStamp = bts$Timestamp, high = replaceNanNearst(bts$High))
cl_high <- kmeans(xhigh,2) # obtain clusters
plot(xhigh,col=cl_high$cluster) # plot the respective clusters
# All of them are same!
## clusters in dataset
#library(readr)
#bt <- read_csv("bitstampUSD_1-min_data_2012-01-01_to_2017-10-20.csv")
install.packages('tseries')
install.packages('forecast')
library(forecast)
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")
NSamples <- 100000
bts <- bt[sample(length(bt$Timestamp),NSamples),]
# opening times
xopen <- cbind(TimeStamp = bts$Timestamp, Open = replaceNanNearst(bts$Open))
cl_open <- kmeans(xopen,2) # find clusters
plot(xopen,col=cl_open$cluster) # plot the respective clusters
#closing times
xclose <- cbind(TimeStamp = bts$Timestamp, Close = replaceNanNearst(bts$Close))
cl_close <- kmeans(xclose,2) # find clusters
plot(xclose,col=cl_close$cluster) # plot the respective clusters
# Low
xlow <- cbind(TimeStamp = bts$Timestamp, Low = replaceNanNearst(bts$Low))
cl_low <- kmeans(xlow,2) # find clusters
plot(xlow,col=cl_low$cluster) # plot the respective clusters
# High
xhigh <- cbind(TimeStamp = bts$Timestamp, high = replaceNanNearst(bts$High))
cl_high <- kmeans(xhigh,2) # obtain clusters
plot(xhigh,col=cl_high$cluster) # plot the respective clusters
# All of them are same!
?replaceNanNearest
## clusters in dataset
#library(readr)
#bt <- read_csv("bitstampUSD_1-min_data_2012-01-01_to_2017-10-20.csv")
#install.packages('tseries')
#install.packages('forecast')
library(forecast)
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")
NSamples <- 100000
bt <- bt[complete.cases(bt),]
bts <- bt[sample(length(bt$Timestamp),NSamples),]
# opening times
xopen <- cbind(TimeStamp = bts$Timestamp, Open = replaceNanNearst(bts$Open))
cl_open <- kmeans(xopen,2) # find clusters
plot(xopen,col=cl_open$cluster) # plot the respective clusters
#closing times
xclose <- cbind(TimeStamp = bts$Timestamp, Close = replaceNanNearst(bts$Close))
cl_close <- kmeans(xclose,2) # find clusters
plot(xclose,col=cl_close$cluster) # plot the respective clusters
# Low
xlow <- cbind(TimeStamp = bts$Timestamp, Low = replaceNanNearst(bts$Low))
cl_low <- kmeans(xlow,2) # find clusters
plot(xlow,col=cl_low$cluster) # plot the respective clusters
# High
xhigh <- cbind(TimeStamp = bts$Timestamp, high = replaceNanNearst(bts$High))
cl_high <- kmeans(xhigh,2) # obtain clusters
plot(xhigh,col=cl_high$cluster) # plot the respective clusters
# All of them are same!
## clusters in dataset
#library(readr)
#bt <- read_csv("bitstampUSD_1-min_data_2012-01-01_to_2017-10-20.csv")
#install.packages('tseries')
#install.packages('forecast')
library(forecast)
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")
NSamples <- 100000
bt <- bt[complete.cases(bt),]
bts <- bt[sample(length(bt$Timestamp),NSamples),]
# opening times
xopen <- cbind(TimeStamp = bts$Timestamp, Open = bts$Open)
cl_open <- kmeans(xopen,2) # find clusters
plot(xopen,col=cl_open$cluster) # plot the respective clusters
#closing times
xclose <- cbind(TimeStamp = bts$Timestamp, Close = bts$Close)
cl_close <- kmeans(xclose,2) # find clusters
plot(xclose,col=cl_close$cluster) # plot the respective clusters
# Low
xlow <- cbind(TimeStamp = bts$Timestamp, Low = bts$Low)
cl_low <- kmeans(xlow,2) # find clusters
plot(xlow,col=cl_low$cluster) # plot the respective clusters
# High
xhigh <- cbind(TimeStamp = bts$Timestamp, high = bts$High)
cl_high <- kmeans(xhigh,2) # obtain clusters
plot(xhigh,col=cl_high$cluster) # plot the respective clusters
# All of them are same!
# Simulating Exponential model
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")  # reading the bitstampUSD dataset
bt <- bt[complete.cases(bt),] # reading the bitstampUSD dataset
NSamples <- 100000            # number of samples
bts <- bt[sample(length(bt$Timestamp),NSamples),]    # selecting random sample points
Open <- bts$Open
mean.Open <- mean(Open)     # mean of the opening values of the bitcoin
sim.Open <- rexp(NSamples,rate = 1/mean.Open) # Simulate new observations
sim.Open
#plot(Open~bts$Timestamp,col=1)
plot(sim.Open~bts$Timestamp,col=4) # plotting new observations
hist(sim.Open,freq = FALSE)
hist(Open, freq= FALSE)   # density of the Opening values
curve(dexp(x,rate=1/mean.Open),add=TRUE)    # overlaying the exponential curve
# Simulating Exponential model
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")  # reading the bitstampUSD dataset
bt <- bt[complete.cases(bt),] # reading the bitstampUSD dataset
NSamples <- 100000            # number of samples
bts <- bt[sample(length(bt$Timestamp),NSamples),]    # selecting random sample points
Open <- bts$Open
mean.Open <- mean(Open)     # mean of the opening values of the bitcoin
sim.Open <- rexp(NSamples,rate = 1/mean.Open) # Simulate new observations
sim.Open
#plot(Open~bts$Timestamp,col=1)
plot(sim.Open~bts$Timestamp,col=4) # plotting new observations
hist(sim.Open,freq = FALSE)
hist(Open, freq= FALSE)   # density of the Opening values
curve(dexp(x,rate=1/mean.Open),add=TRUE)    # overlaying the exponential curve
# Simulating Exponential model
library(readr)
bt <- read_csv("D:/deepak/UBC Courses/Modeling and Simulation/Project/btceUSD_1-min_data_2012-01-01_to_2017-05-31.csv")  # reading the bitstampUSD dataset
bt <- bt[complete.cases(bt),] # reading the bitstampUSD dataset
NSamples <- 100000            # number of samples
bts <- bt[sample(length(bt$Timestamp),NSamples),]    # selecting random sample points
Open <- bts$Open
mean.Open <- mean(Open)     # mean of the opening values of the bitcoin
sim.Open <- rexp(NSamples,rate = 1/mean.Open) # Simulate new observations
sim.Open
#plot(Open~bts$Timestamp,col=1)
plot(sim.Open~bts$Timestamp,col=4) # plotting new observations
hist(sim.Open,freq = FALSE)
hist(Open, freq= FALSE)   # density of the Opening values
curve(dexp(x,rate=1/mean.Open),add=TRUE)    # overlaying the exponential curve
